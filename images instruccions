--> 1 ) docker network create springcloud

Eureka

--> docker build -t eureka-server:v1 .
--> docker run -p 8761:8761 --name eureka-server --network springcloud eureka-server:v1


MYSQL

Bajar la imagen de Mysql8 

--> docker pull mysql:8

--> docker run -p 3307:3306 --name=springcloud-mysql8 --network springcloud -e MYSQL_ROOT_PASSWORD=1234 -e MYSQL_DATABASE=tpidacsdb -d mysql:8 

--> docker logs -f springcloud-mysql8


Health Service 

--> docker build -t service-health-insurance:v1 .

--> docker run -p 8003:8003 --name=service-health-insurance --network springcloud service-health-insurance:v1

Lodging Service

--> docker build -t lodging-service:v1 .

--> docker run -p 8005:8005 --name=lodging-service --network springcloud lodging-service:v1

Matches Service

--> docker build -t match-service:v1 .

--> docker run -p 8001:8001 --name=match-service --network springcloud match-service:v1


Payment Service


--> docker build -t payment-service:v1 .

--> docker run -p 8007:8007 --name=payment-service --network springcloud payment-service:v1


Travel Service

--> docker build -t travel-service:v1 .

--> docker run -p 8004:8004 --name=travel-service --network springcloud travel-service:v1


Admin package Service

--> docker build -t package-admin-service:v1 .

--> docker run -p 8002:8002 --name=package-admin-service --network springcloud package-admin-service:v1

Client package Service

--> docker build -t package-client-service:v1 .

--> docker run -p 8009:8009 --name=package-client-service --network springcloud package-client-service:v1


Zull Gateway Service

--> docker build -t zull-server:v1 .

--> docker run -p 8090:8090 --name=zull-server --network springcloud zull-server:v1



















